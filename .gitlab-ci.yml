stages:
  - build
  - deploy
  - typesense-index

variables:
  DOCKER_IMAGE: "${CI_REGISTRY_IMAGE}/${CI_COMMIT_BRANCH}"
  PROJECT: "${CI_PROJECT_NAMESPACE}"
  PROJECT_NAME: "${CI_PROJECT_NAMESPACE}_${CI_PROJECT_NAME}"

# docs-build-push-docker:
#   image: niklucky/gitlab-base:latest
#   stage: build
#   tags:
#     - docker
#   environment: $CI_COMMIT_BRANCH
#   rules:
#     - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main")
#       when: on_success
#   script:
#     - "docker_tools.sh login"
#     - 'echo "Docker build image: ${DOCKER_IMAGE}:${CI_PIPELINE_IID}"'
#     - >
#       docker buildx build
#       --pull
#       --platform linux/amd64
#       --build-arg "PROJECT=$PROJECT"
#       --build-arg "PORT=$PORT"
#       --build-arg "TYPESENSE_API_KEY=$TYPESENSE_API_KEY"
#       --build-arg "HOST=$HOST"
#       --build-arg "CHANNEL=$CI_ENVIRONMENT_NAME"
#       --build-arg "BUILD_NUMBER=$CI_PIPELINE_ID"
#       --build-arg "CI_COMMIT_BRANCH=$CI_COMMIT_BRANCH"
#       --build-arg "CI_COMMIT_SHA=$CI_COMMIT_SHA"
#       --cache-from "${DOCKER_IMAGE}:latest"
#       --tag "${DOCKER_IMAGE}:${CI_PIPELINE_IID}"
#       --tag "${DOCKER_IMAGE}:latest" .
#     - "docker_tools.sh push"
#   after_script:
#     - "notify_telegram.py"
#     - "docker_tools.sh clean"

# docs-deploy:
#   stage: deploy
#   image: niklucky/gitlab-base:latest
#   tags:
#     - docker
#   rules:
#     - if: $CI_COMMIT_BRANCH == "develop"
#       when: on_success
#     - if: $CI_COMMIT_BRANCH == "main"
#       when: manual
#   environment: $CI_COMMIT_BRANCH
#   script:
#     # - "cat $ENV_FILE"
#     # - "cp $ENV_FILE .env"
#     - "cp compose.ci.yaml compose.yml"
#     - "docker_tools.sh createRemoteContext"
#     - "docker_tools.sh createNetwork"
#     - "docker_tools.sh stackDeploy"
#   after_script:
#     - "docker_tools.sh removeContext"
#     - "notify_telegram.py"
#     - "notify_telegram.py chat_id=${TELEGRAM_CHAT_ID_ADDITIONAL}"

docs-typesense-index:
  stage: typesense-index
  image: niklucky/gitlab-base:latest
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
  environment: $CI_COMMIT_BRANCH
  script:
    - apk add jq
    - "cp $ENV_TYPESENSE .env"
    - ./scripts/typesense_index.sh
  after_script:
    - "notify_telegram.py"
    - "notify_telegram.py chat_id=${TELEGRAM_CHAT_ID_ADDITIONAL}"
